<h1>New Game</h1>

<p>
<%= @letters %>
</p>

<h3>What is the longest word you can find?</h3>

<form action="/score" method="POST" data-turbo="false">
  <input type="text" name="word" placeholder="suggest a word">
  <input type="hidden" name="grid" value="<%= @letters.join %>"> <!-- hidden field -->
  <input type="hidden" name="start_time" value="<%= Time.now %>"> <!-- hidden field -->
  <input type="submit" value="Play">
  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
</form>

<%# include a hidden field in your form to pass the grid parameter to the score action. %>
<%# the grid parameter is passed as a hidden field with the value set to @letters.join, which concatenates the array of letters into a single string. %>

<%# type="hidden": This attribute sets the input type to "hidden".
Hidden inputs are not visible to the user on the page, but their values can still be submitted with the form.

name="grid": This attribute sets the name of the input field to "grid".
The name is used as the key to access the value of the input in the params hash on the server side.

value="<%= @letters.join %>
<%# : This attribute sets the value of the input field.
In this case, it is set to <%= @letters.join %>

<%# @letters refers to an instance variable that holds an array of letters.
@letters.join is calling the join method on the @letters array.
The join method concatenates all the elements of the array into a single string.

<%# Setting value="<%= @letters.join %>
<%# ensures that the concatenated string of %>
<%# letters is passed as the value of the hidden input field. When the form is submitted,
this value will be included in the form data and can be accessed using params[:grid] in the server-side code. %>

<%# By including the grid of letters as a hidden input field,
you can pass this information along with the player's word to the score action and perform the necessary validations. %>
